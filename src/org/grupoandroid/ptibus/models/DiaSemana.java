package org.grupoandroid.ptibus.models;

import java.util.List;
import org.grupoandroid.ptibus.models.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table DIA_SEMANA.
 */
public class DiaSemana {

    private Long id;
    /** Not-null value. */
    private String nome;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient DiaSemanaDao myDao;

    private List<horario_diaSemana> horario_diaSemanaList;

    public DiaSemana() {
    }

    public DiaSemana(Long id) {
        this.id = id;
    }

    public DiaSemana(Long id, String nome) {
        this.id = id;
        this.nome = nome;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getDiaSemanaDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getNome() {
        return nome;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setNome(String nome) {
        this.nome = nome;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public synchronized List<horario_diaSemana> getHorario_diaSemanaList() {
        if (horario_diaSemanaList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            horario_diaSemanaDao targetDao = daoSession.getHorario_diaSemanaDao();
            horario_diaSemanaList = targetDao._queryDiaSemana_Horario_diaSemanaList(id);
        }
        return horario_diaSemanaList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetHorario_diaSemanaList() {
        horario_diaSemanaList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
